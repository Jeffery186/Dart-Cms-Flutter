// ignore_for_file: non_constant_identifier_names

import 'package:dart_cms_flutter/interface/videoGroup.dart';

///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class AllTypesDatasValueCurQueryListList
    implements VideoGroupListChildInterFace {
/*
{
  "_id": "60929f4de38c3f16000426ce",
  "videoTitle": "非常完美",
  "director": "李莎旻子",
  "videoImage": "http://puui.qpic.cn/vcover_vt_pic/0/mzc002000dmni1j1619329188348/0",
  "poster": "",
  "performer": "莎娜,陆琪,崔明悦",
  "video_type": "603559b98de8ff1713136e0c",
  "video_rate": 0,
  "update_time": "2020-07-02 21:54:19",
  "language": "普通话",
  "sub_region": "内地",
  "rel_time": "2021",
  "introduce": "《非常完美》是贵州卫视一档适应时尚都市生活的大型甜蜜微约会节目，为广大单身男女提供公开、公平的婚恋、交友平台，时尚绚丽的舞台设计和浓缩的甜蜜“约会”模式，得到观众和网友广泛关注。",
  "remind_tip": "HD",
  "popular": false,
  "allow_reply": false,
  "openSwiper": false,
  "display": true,
  "scource_sort": false
} 
*/

  String? Id;
  String? videoTitle;
  String? director;
  String? videoImage;
  String? poster;
  String? performer;
  String? videoType;
  int? videoRate;
  String? updateTime;
  String? language;
  String? subRegion;
  String? relTime;
  String? introduce;
  String? remindTip;
  bool? popular;
  bool? allowReply;
  bool? openSwiper;
  bool? display;
  bool? scourceSort;

  AllTypesDatasValueCurQueryListList({
    this.Id,
    this.videoTitle,
    this.director,
    this.videoImage,
    this.poster,
    this.performer,
    this.videoType,
    this.videoRate,
    this.updateTime,
    this.language,
    this.subRegion,
    this.relTime,
    this.introduce,
    this.remindTip,
    this.popular,
    this.allowReply,
    this.openSwiper,
    this.display,
    this.scourceSort,
  });
  AllTypesDatasValueCurQueryListList.fromJson(Map<String, dynamic> json) {
    Id = json["_id"]?.toString();
    videoTitle = json["videoTitle"]?.toString();
    director = json["director"]?.toString();
    videoImage = json["videoImage"]?.toString();
    poster = json["poster"]?.toString();
    performer = json["performer"]?.toString();
    videoType = json["video_type"]?.toString();
    videoRate = json["video_rate"]?.toInt();
    updateTime = json["update_time"]?.toString();
    language = json["language"]?.toString();
    subRegion = json["sub_region"]?.toString();
    relTime = json["rel_time"]?.toString();
    introduce = json["introduce"]?.toString();
    remindTip = json["remind_tip"]?.toString();
    popular = json["popular"];
    allowReply = json["allow_reply"];
    openSwiper = json["openSwiper"];
    display = json["display"];
    scourceSort = json["scource_sort"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["_id"] = Id;
    data["videoTitle"] = videoTitle;
    data["director"] = director;
    data["videoImage"] = videoImage;
    data["poster"] = poster;
    data["performer"] = performer;
    data["video_type"] = videoType;
    data["video_rate"] = videoRate;
    data["update_time"] = updateTime;
    data["language"] = language;
    data["sub_region"] = subRegion;
    data["rel_time"] = relTime;
    data["introduce"] = introduce;
    data["remind_tip"] = remindTip;
    data["popular"] = popular;
    data["allow_reply"] = allowReply;
    data["openSwiper"] = openSwiper;
    data["display"] = display;
    data["scource_sort"] = scourceSort;
    return data;
  }
}

class AllTypesDatasValueCurQueryList
    implements VideoGroupInterFace<AllTypesDatasValueCurQueryListList> {
/*
{
  "page": 1,
  "total": 31023,
  "list": [
    {
      "_id": "60929f4de38c3f16000426ce",
      "videoTitle": "非常完美",
      "director": "李莎旻子",
      "videoImage": "http://puui.qpic.cn/vcover_vt_pic/0/mzc002000dmni1j1619329188348/0",
      "poster": "",
      "performer": "莎娜,陆琪,崔明悦",
      "video_type": "603559b98de8ff1713136e0c",
      "video_rate": 0,
      "update_time": "2020-07-02 21:54:19",
      "language": "普通话",
      "sub_region": "内地",
      "rel_time": "2021",
      "introduce": "《非常完美》是贵州卫视一档适应时尚都市生活的大型甜蜜微约会节目，为广大单身男女提供公开、公平的婚恋、交友平台，时尚绚丽的舞台设计和浓缩的甜蜜“约会”模式，得到观众和网友广泛关注。",
      "remind_tip": "HD",
      "popular": false,
      "allow_reply": false,
      "openSwiper": false,
      "display": true,
      "scource_sort": false
    }
  ]
} 
*/
  String? name;
  int? page;
  int? total;
  List<AllTypesDatasValueCurQueryListList?>? list;

  AllTypesDatasValueCurQueryList({
    this.page,
    this.total,
    this.list,
  });
  AllTypesDatasValueCurQueryList.fromJson(Map<String, dynamic> json) {
    page = json["page"]?.toInt();
    total = json["total"]?.toInt();
    if (json["list"] != null) {
      final v = json["list"];
      final arr0 = <AllTypesDatasValueCurQueryListList>[];
      v.forEach((v) {
        arr0.add(AllTypesDatasValueCurQueryListList.fromJson(v));
      });
      list = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["page"] = page;
    data["total"] = total;
    if (list != null) {
      final v = list;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["list"] = arr0;
    }
    return data;
  }
}

class AllTypesDatasValueAllTypeItemLanguageList {
/*
{
  "name": "全部",
  "_id": "",
  "active": true
} 
*/

  String? name;
  String? Id;
  bool? active;

  AllTypesDatasValueAllTypeItemLanguageList({
    this.name,
    this.Id,
    this.active,
  });
  AllTypesDatasValueAllTypeItemLanguageList.fromJson(
      Map<String, dynamic> json) {
    name = json["name"]?.toString();
    Id = json["_id"]?.toString();
    active = json["active"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["name"] = name;
    data["_id"] = Id;
    data["active"] = active;
    return data;
  }
}

class AllTypesDatasValueAllTypeItemLanguage {
/*
{
  "label": "语言",
  "list": [
    {
      "name": "全部",
      "_id": "",
      "active": true
    }
  ]
} 
*/

  String? label;
  List<AllTypesDatasValueAllTypeItemLanguageList?>? list;

  AllTypesDatasValueAllTypeItemLanguage({
    this.label,
    this.list,
  });
  AllTypesDatasValueAllTypeItemLanguage.fromJson(Map<String, dynamic> json) {
    label = json["label"]?.toString();
    if (json["list"] != null) {
      final v = json["list"];
      final arr0 = <AllTypesDatasValueAllTypeItemLanguageList>[];
      v.forEach((v) {
        arr0.add(AllTypesDatasValueAllTypeItemLanguageList.fromJson(v));
      });
      list = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["label"] = label;
    if (list != null) {
      final v = list;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["list"] = arr0;
    }
    return data;
  }
}

class AllTypesDatasValueAllTypeItemYearsList {
/*
{
  "name": "全部",
  "_id": "",
  "active": true
} 
*/

  String? name;
  String? Id;
  bool? active;

  AllTypesDatasValueAllTypeItemYearsList({
    this.name,
    this.Id,
    this.active,
  });
  AllTypesDatasValueAllTypeItemYearsList.fromJson(Map<String, dynamic> json) {
    name = json["name"]?.toString();
    Id = json["_id"]?.toString();
    active = json["active"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["name"] = name;
    data["_id"] = Id;
    data["active"] = active;
    return data;
  }
}

class AllTypesDatasValueAllTypeItemYears {
/*
{
  "label": "年代",
  "list": [
    {
      "name": "全部",
      "_id": "",
      "active": true
    }
  ]
} 
*/

  String? label;
  List<AllTypesDatasValueAllTypeItemYearsList?>? list;

  AllTypesDatasValueAllTypeItemYears({
    this.label,
    this.list,
  });
  AllTypesDatasValueAllTypeItemYears.fromJson(Map<String, dynamic> json) {
    label = json["label"]?.toString();
    if (json["list"] != null) {
      final v = json["list"];
      final arr0 = <AllTypesDatasValueAllTypeItemYearsList>[];
      v.forEach((v) {
        arr0.add(AllTypesDatasValueAllTypeItemYearsList.fromJson(v));
      });
      list = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["label"] = label;
    if (list != null) {
      final v = list;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["list"] = arr0;
    }
    return data;
  }
}

class AllTypesDatasValueAllTypeItemRegionList {
/*
{
  "name": "全部",
  "_id": "",
  "active": true
} 
*/

  String? name;
  String? Id;
  bool? active;

  AllTypesDatasValueAllTypeItemRegionList({
    this.name,
    this.Id,
    this.active,
  });
  AllTypesDatasValueAllTypeItemRegionList.fromJson(Map<String, dynamic> json) {
    name = json["name"]?.toString();
    Id = json["_id"]?.toString();
    active = json["active"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["name"] = name;
    data["_id"] = Id;
    data["active"] = active;
    return data;
  }
}

class AllTypesDatasValueAllTypeItemRegion {
/*
{
  "label": "地区",
  "list": [
    {
      "name": "全部",
      "_id": "",
      "active": true
    }
  ]
} 
*/

  String? label;
  List<AllTypesDatasValueAllTypeItemRegionList?>? list;

  AllTypesDatasValueAllTypeItemRegion({
    this.label,
    this.list,
  });
  AllTypesDatasValueAllTypeItemRegion.fromJson(Map<String, dynamic> json) {
    label = json["label"]?.toString();
    if (json["list"] != null) {
      final v = json["list"];
      final arr0 = <AllTypesDatasValueAllTypeItemRegionList>[];
      v.forEach((v) {
        arr0.add(AllTypesDatasValueAllTypeItemRegionList.fromJson(v));
      });
      list = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["label"] = label;
    if (list != null) {
      final v = list;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["list"] = arr0;
    }
    return data;
  }
}

class AllTypesDatasValueAllTypeItemTypeList {
/*
{
  "name": "全部",
  "_id": "",
  "active": true
} 
*/

  String? name;
  String? Id;
  bool? active;

  AllTypesDatasValueAllTypeItemTypeList({
    this.name,
    this.Id,
    this.active,
  });
  AllTypesDatasValueAllTypeItemTypeList.fromJson(Map<String, dynamic> json) {
    name = json["name"]?.toString();
    Id = json["_id"]?.toString();
    active = json["active"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["name"] = name;
    data["_id"] = Id;
    data["active"] = active;
    return data;
  }
}

class AllTypesDatasValueAllTypeItemType {
/*
{
  "label": "分类",
  "list": [
    {
      "name": "全部",
      "_id": "",
      "active": true
    }
  ]
} 
*/

  String? label;
  List<AllTypesDatasValueAllTypeItemTypeList?>? list;

  AllTypesDatasValueAllTypeItemType({
    this.label,
    this.list,
  });
  AllTypesDatasValueAllTypeItemType.fromJson(Map<String, dynamic> json) {
    label = json["label"]?.toString();
    if (json["list"] != null) {
      final v = json["list"];
      final arr0 = <AllTypesDatasValueAllTypeItemTypeList>[];
      v.forEach((v) {
        arr0.add(AllTypesDatasValueAllTypeItemTypeList.fromJson(v));
      });
      list = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["label"] = label;
    if (list != null) {
      final v = list;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["list"] = arr0;
    }
    return data;
  }
}

class AllTypesDatasValueAllTypeItemNavList {
/*
{
  "name": "全部",
  "_id": "",
  "active": true
} 
*/

  String? name;
  String? Id;
  bool? active;

  AllTypesDatasValueAllTypeItemNavList({
    this.name,
    this.Id,
    this.active,
  });
  AllTypesDatasValueAllTypeItemNavList.fromJson(Map<String, dynamic> json) {
    name = json["name"]?.toString();
    Id = json["_id"]?.toString();
    active = json["active"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["name"] = name;
    data["_id"] = Id;
    data["active"] = active;
    return data;
  }
}

class AllTypesDatasValueAllTypeItemNav {
/*
{
  "label": "导航",
  "list": [
    {
      "name": "全部",
      "_id": "",
      "active": true
    }
  ]
} 
*/

  String? label;
  List<AllTypesDatasValueAllTypeItemNavList?>? list;

  AllTypesDatasValueAllTypeItemNav({
    this.label,
    this.list,
  });
  AllTypesDatasValueAllTypeItemNav.fromJson(Map<String, dynamic> json) {
    label = json["label"]?.toString();
    if (json["list"] != null) {
      final v = json["list"];
      final arr0 = <AllTypesDatasValueAllTypeItemNavList>[];
      v.forEach((v) {
        arr0.add(AllTypesDatasValueAllTypeItemNavList.fromJson(v));
      });
      list = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["label"] = label;
    if (list != null) {
      final v = list;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["list"] = arr0;
    }
    return data;
  }
}

class AllTypesDatasValueAllTypeItem {
/*
{
  "nav": {
    "label": "导航",
    "list": [
      {
        "name": "全部",
        "_id": "",
        "active": true
      }
    ]
  },
  "type": {
    "label": "分类",
    "list": [
      {
        "name": "全部",
        "_id": "",
        "active": true
      }
    ]
  },
  "region": {
    "label": "地区",
    "list": [
      {
        "name": "全部",
        "_id": "",
        "active": true
      }
    ]
  },
  "years": {
    "label": "年代",
    "list": [
      {
        "name": "全部",
        "_id": "",
        "active": true
      }
    ]
  },
  "language": {
    "label": "语言",
    "list": [
      {
        "name": "全部",
        "_id": "",
        "active": true
      }
    ]
  }
} 
*/

  AllTypesDatasValueAllTypeItemNav? nav;
  AllTypesDatasValueAllTypeItemType? type;
  AllTypesDatasValueAllTypeItemRegion? region;
  AllTypesDatasValueAllTypeItemYears? years;
  AllTypesDatasValueAllTypeItemLanguage? language;

  AllTypesDatasValueAllTypeItem({
    this.nav,
    this.type,
    this.region,
    this.years,
    this.language,
  });
  AllTypesDatasValueAllTypeItem.fromJson(Map<String, dynamic> json) {
    nav = (json["nav"] != null)
        ? AllTypesDatasValueAllTypeItemNav.fromJson(json["nav"])
        : null;
    type = (json["type"] != null)
        ? AllTypesDatasValueAllTypeItemType.fromJson(json["type"])
        : null;
    region = (json["region"] != null)
        ? AllTypesDatasValueAllTypeItemRegion.fromJson(json["region"])
        : null;
    years = (json["years"] != null)
        ? AllTypesDatasValueAllTypeItemYears.fromJson(json["years"])
        : null;
    language = (json["language"] != null)
        ? AllTypesDatasValueAllTypeItemLanguage.fromJson(json["language"])
        : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (nav != null) {
      data["nav"] = nav!.toJson();
    }
    if (type != null) {
      data["type"] = type!.toJson();
    }
    if (region != null) {
      data["region"] = region!.toJson();
    }
    if (years != null) {
      data["years"] = years!.toJson();
    }
    if (language != null) {
      data["language"] = language!.toJson();
    }
    return data;
  }
}

class AllTypesDatasValueMealList {
/*
{
  "_id": "61275c7e23444f6354cd0b6c",
  "name": "广告1",
  "path": "/upload/meal/4201e454-fcd6-443c-a490-e73eef2e7fd4.gif",
  "link": "https://www.baidu.com",
  "shape": "app",
  "note": "465465",
  "type": "advert"
} 
*/

  String? Id;
  String? name;
  String? path;
  String? link;
  String? shape;
  String? note;
  String? type;

  AllTypesDatasValueMealList({
    this.Id,
    this.name,
    this.path,
    this.link,
    this.shape,
    this.note,
    this.type,
  });
  AllTypesDatasValueMealList.fromJson(Map<String, dynamic> json) {
    Id = json["_id"]?.toString();
    name = json["name"]?.toString();
    path = json["path"]?.toString();
    link = json["link"]?.toString();
    shape = json["shape"]?.toString();
    note = json["note"]?.toString();
    type = json["type"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["_id"] = Id;
    data["name"] = name;
    data["path"] = path;
    data["link"] = link;
    data["shape"] = shape;
    data["note"] = note;
    data["type"] = type;
    return data;
  }
}

class AllTypesDatasValue {
/*
{
  "mealList": [
    {
      "_id": "61275c7e23444f6354cd0b6c",
      "name": "广告1",
      "path": "/upload/meal/4201e454-fcd6-443c-a490-e73eef2e7fd4.gif",
      "link": "https://www.baidu.com",
      "shape": "app",
      "note": "465465",
      "type": "advert"
    }
  ],
  "isLogin": false,
  "allTypeItem": {
    "nav": {
      "label": "导航",
      "list": [
        {
          "name": "全部",
          "_id": "",
          "active": true
        }
      ]
    },
    "type": {
      "label": "分类",
      "list": [
        {
          "name": "全部",
          "_id": "",
          "active": true
        }
      ]
    },
    "region": {
      "label": "地区",
      "list": [
        {
          "name": "全部",
          "_id": "",
          "active": true
        }
      ]
    },
    "years": {
      "label": "年代",
      "list": [
        {
          "name": "全部",
          "_id": "",
          "active": true
        }
      ]
    },
    "language": {
      "label": "语言",
      "list": [
        {
          "name": "全部",
          "_id": "",
          "active": true
        }
      ]
    }
  },
  "curQueryList": {
    "page": 1,
    "total": 31023,
    "list": [
      {
        "_id": "60929f4de38c3f16000426ce",
        "videoTitle": "非常完美",
        "director": "李莎旻子",
        "videoImage": "http://puui.qpic.cn/vcover_vt_pic/0/mzc002000dmni1j1619329188348/0",
        "poster": "",
        "performer": "莎娜,陆琪,崔明悦",
        "video_type": "603559b98de8ff1713136e0c",
        "video_rate": 0,
        "update_time": "2020-07-02 21:54:19",
        "language": "普通话",
        "sub_region": "内地",
        "rel_time": "2021",
        "introduce": "《非常完美》是贵州卫视一档适应时尚都市生活的大型甜蜜微约会节目，为广大单身男女提供公开、公平的婚恋、交友平台，时尚绚丽的舞台设计和浓缩的甜蜜“约会”模式，得到观众和网友广泛关注。",
        "remind_tip": "HD",
        "popular": false,
        "allow_reply": false,
        "openSwiper": false,
        "display": true,
        "scource_sort": false
      }
    ]
  }
} 
*/

  List<AllTypesDatasValueMealList?>? mealList;
  bool? isLogin;
  AllTypesDatasValueAllTypeItem? allTypeItem;
  AllTypesDatasValueCurQueryList? curQueryList;

  AllTypesDatasValue({
    this.mealList,
    this.isLogin,
    this.allTypeItem,
    this.curQueryList,
  });
  AllTypesDatasValue.fromJson(Map<String, dynamic> json) {
    if (json["mealList"] != null) {
      final v = json["mealList"];
      final arr0 = <AllTypesDatasValueMealList>[];
      v.forEach((v) {
        arr0.add(AllTypesDatasValueMealList.fromJson(v));
      });
      mealList = arr0;
    }
    isLogin = json["isLogin"];
    allTypeItem = (json["allTypeItem"] != null)
        ? AllTypesDatasValueAllTypeItem.fromJson(json["allTypeItem"])
        : null;
    curQueryList = (json["curQueryList"] != null)
        ? AllTypesDatasValueCurQueryList.fromJson(json["curQueryList"])
        : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (mealList != null) {
      final v = mealList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["mealList"] = arr0;
    }
    data["isLogin"] = isLogin;
    if (allTypeItem != null) {
      data["allTypeItem"] = allTypeItem!.toJson();
    }
    if (curQueryList != null) {
      data["curQueryList"] = curQueryList!.toJson();
    }
    return data;
  }
}

class AllTypesDatas {
/*
{
  "code": 200,
  "text": "操作成功！",
  "value": {
    "mealList": [
      {
        "_id": "61275c7e23444f6354cd0b6c",
        "name": "广告1",
        "path": "/upload/meal/4201e454-fcd6-443c-a490-e73eef2e7fd4.gif",
        "link": "https://www.baidu.com",
        "shape": "app",
        "note": "465465",
        "type": "advert"
      }
    ],
    "isLogin": false,
    "allTypeItem": {
      "nav": {
        "label": "导航",
        "list": [
          {
            "name": "全部",
            "_id": "",
            "active": true
          }
        ]
      },
      "type": {
        "label": "分类",
        "list": [
          {
            "name": "全部",
            "_id": "",
            "active": true
          }
        ]
      },
      "region": {
        "label": "地区",
        "list": [
          {
            "name": "全部",
            "_id": "",
            "active": true
          }
        ]
      },
      "years": {
        "label": "年代",
        "list": [
          {
            "name": "全部",
            "_id": "",
            "active": true
          }
        ]
      },
      "language": {
        "label": "语言",
        "list": [
          {
            "name": "全部",
            "_id": "",
            "active": true
          }
        ]
      }
    },
    "curQueryList": {
      "page": 1,
      "total": 31023,
      "list": [
        {
          "_id": "60929f4de38c3f16000426ce",
          "videoTitle": "非常完美",
          "director": "李莎旻子",
          "videoImage": "http://puui.qpic.cn/vcover_vt_pic/0/mzc002000dmni1j1619329188348/0",
          "poster": "",
          "performer": "莎娜,陆琪,崔明悦",
          "video_type": "603559b98de8ff1713136e0c",
          "video_rate": 0,
          "update_time": "2020-07-02 21:54:19",
          "language": "普通话",
          "sub_region": "内地",
          "rel_time": "2021",
          "introduce": "《非常完美》是贵州卫视一档适应时尚都市生活的大型甜蜜微约会节目，为广大单身男女提供公开、公平的婚恋、交友平台，时尚绚丽的舞台设计和浓缩的甜蜜“约会”模式，得到观众和网友广泛关注。",
          "remind_tip": "HD",
          "popular": false,
          "allow_reply": false,
          "openSwiper": false,
          "display": true,
          "scource_sort": false
        }
      ]
    }
  }
} 
*/

  int? code;
  String? text;
  AllTypesDatasValue? value;

  AllTypesDatas({
    this.code,
    this.text,
    this.value,
  });
  AllTypesDatas.fromJson(Map<String, dynamic> json) {
    code = json["code"]?.toInt();
    text = json["text"]?.toString();
    value = (json["value"] != null)
        ? AllTypesDatasValue.fromJson(json["value"])
        : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["code"] = code;
    data["text"] = text;
    if (value != null) {
      data["value"] = value!.toJson();
    }
    return data;
  }
}
